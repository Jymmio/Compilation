/* This file was generated by SableCC (http://www.sablecc.org/). */

package lParser.analysis;

import java.util.*;
import lParser.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgrammeProgramme(AProgrammeProgramme node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuExpression(AOuExpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAP2Expression(AP2Expression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtExpression2(AEtExpression2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAP3Expression2(AP3Expression2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEquExpression3(AEquExpression3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInfExpression3(AInfExpression3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAP4Expression3(AP4Expression3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusExpression4(APlusExpression4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMoinsExpression4(AMoinsExpression4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAP5Expression4(AP5Expression4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExpression5(AMultExpression5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExpression5(ADivExpression5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAP6Expression5(AP6Expression5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonExpression6(ANonExpression6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAP7Expression6(AP7Expression6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParenteseExpression7(AParenteseExpression7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANombreExpression7(ANombreExpression7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVraiExpression7(AVraiExpression7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFauxExpression7(AFauxExpression7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarExpression7(AVarExpression7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAfExpression7(AAfExpression7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALireExpression7(ALireExpression7 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListeExListeExpressions(AListeExListeExpressions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeExpressions(AVideListeExpressions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirguleListeExpressionsNext(AVirguleListeExpressionsNext node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeExpressionsNext(AVideListeExpressionsNext node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAffectInstruction(AAffectInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATantqueInstruction(ATantqueInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASiInstruction(ASiInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASinonInstruction(ASinonInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelFonInstruction(AAppelFonInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEcrireInstruction(AEcrireInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAResultFoncInstruction(AResultFoncInstruction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocIntBlocInstructions(ABlocIntBlocInstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListeIntListeInstructions(AListeIntListeInstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListeInstructions(AVideListeInstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleVar(ASimpleVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableauVar(ATableauVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecSimpleDeclarVar(ADecSimpleDeclarVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecTableauDeclarVar(ADecTableauDeclarVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolType(ABoolType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEntierType(AEntierType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclarationFunctionDeclarationFunction(ADeclarationFunctionDeclarationFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeTypeOption(ATypeTypeOption node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideTypeOption(AVideTypeOption node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariableListDeclarationVariable(AVariableListDeclarationVariable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListDeclarationVariable(AVideListDeclarationVariable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVirguleVarListDeclarationVariableNext(AVirguleVarListDeclarationVariableNext node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListDeclarationVariableNext(AVideListDeclarationVariableNext node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListDeclarationFunctionListDeclarationFunction(AListDeclarationFunctionListDeclarationFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideListDeclarationFunction(AVideListDeclarationFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaces(TEspaces node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentaire(TCommentaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPVirgule(TPVirgule node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgule(TVirgule node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMoins(TMoins node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEqu(TEqu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInf(TInf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEt(TEt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVrai(TVrai node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaux(TFaux node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSi(TSi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAlors(TAlors node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSinon(TSinon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTantque(TTantque node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaire(TFaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRetour(TRetour node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEcrire(TEcrire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLire(TLire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNon(TNon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNombre(TNombre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntier(TEntier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentifiant(TIdentifiant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
